#include "PCFG.h"
#include <chrono>
#include <fstream>
#include "md5.h"
#include <iomanip>
#include <emmintrin.h> 
using namespace std;
using namespace chrono;

// 编译指令如下：
// g++ correctness.cpp train.cpp guessing.cpp md5.cpp -o test.exe


int main()
{
 bit32 state[4];
    MD5Hash("bvaisdbjasdkafkasdfnavkjnakd", state);
    for (int i1 = 0; i1 < 4; i1 += 1) {
        cout << std::setw(8) << std::setfill('0') << hex << state[i1];
    }
    cout << endl;
    MD5Hash("yiyangqianxi", state);
    for (int i1 = 0; i1 < 4; i1 += 1) {
        cout << std::setw(8) << std::setfill('0') << hex << state[i1];
    }
    cout << endl;
    MD5Hash("nankaidaxue", state);
    for (int i1 = 0; i1 < 4; i1 += 1) {
        cout << std::setw(8) << std::setfill('0') << hex << state[i1];
    }
    cout << endl;
    MD5Hash("md5hashneonbingxing", state);
    for (int i1 = 0; i1 < 4; i1 += 1) {
        cout << std::setw(8) << std::setfill('0') << hex << state[i1];
    }
    cout << endl;

    cout << endl;


    __m128i state1[4];
    string inputs[4] = {
        "bvaisdbjasdkafkasdfnavkjnakd",
        "yiyangqianxi",
        "nankaidaxue",
        "md5hashneonbingxing"
    };
    
    MD5Hash_SSE(inputs, state1); 
    for (int i1 = 0; i1 < 4; i1 += 1)
    {
        cout << std::setw(8) << std::setfill('0') << hex << _mm_extract_epi32(state1[i1], 0);
    }
        cout << endl;

    for (int i1 = 0; i1 < 4; i1 += 1)
    {
        cout << std::setw(8) << std::setfill('0') << hex << _mm_extract_epi32(state1[i1], 1);
    }
        cout << endl;

    for (int i1 = 0; i1 < 4; i1 += 1)
    {
        cout << std::setw(8) << std::setfill('0') << hex << _mm_extract_epi32(state1[i1], 2);
    }
        cout << endl;

    for (int i1 = 0; i1 < 4; i1 += 1)
    {
        cout << std::setw(8) << std::setfill('0') << hex << _mm_extract_epi32(state1[i1], 3);
    }
        cout << endl;
 
}
